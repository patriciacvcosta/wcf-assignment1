//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment_1_Client.Assignment1ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Assignment1ServiceReference.IAssignment_1_Service")]
    public interface IAssignment_1_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssignment_1_Service/CheckPrimeNumber", ReplyAction="http://tempuri.org/IAssignment_1_Service/CheckPrimeNumberResponse")]
        bool CheckPrimeNumber(int input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssignment_1_Service/CheckPrimeNumber", ReplyAction="http://tempuri.org/IAssignment_1_Service/CheckPrimeNumberResponse")]
        System.Threading.Tasks.Task<bool> CheckPrimeNumberAsync(int input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssignment_1_Service/SumDigits", ReplyAction="http://tempuri.org/IAssignment_1_Service/SumDigitsResponse")]
        int SumDigits(int input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssignment_1_Service/SumDigits", ReplyAction="http://tempuri.org/IAssignment_1_Service/SumDigitsResponse")]
        System.Threading.Tasks.Task<int> SumDigitsAsync(int input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssignment_1_Service/ReverseString", ReplyAction="http://tempuri.org/IAssignment_1_Service/ReverseStringResponse")]
        string ReverseString(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssignment_1_Service/ReverseString", ReplyAction="http://tempuri.org/IAssignment_1_Service/ReverseStringResponse")]
        System.Threading.Tasks.Task<string> ReverseStringAsync(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssignment_1_Service/PrintHtmlTags", ReplyAction="http://tempuri.org/IAssignment_1_Service/PrintHtmlTagsResponse")]
        string PrintHtmlTags(string tag, string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssignment_1_Service/PrintHtmlTags", ReplyAction="http://tempuri.org/IAssignment_1_Service/PrintHtmlTagsResponse")]
        System.Threading.Tasks.Task<string> PrintHtmlTagsAsync(string tag, string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssignment_1_Service/SortNumbers", ReplyAction="http://tempuri.org/IAssignment_1_Service/SortNumbersResponse")]
        string SortNumbers(string sortingType, int[] numbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssignment_1_Service/SortNumbers", ReplyAction="http://tempuri.org/IAssignment_1_Service/SortNumbersResponse")]
        System.Threading.Tasks.Task<string> SortNumbersAsync(string sortingType, int[] numbers);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAssignment_1_ServiceChannel : Assignment_1_Client.Assignment1ServiceReference.IAssignment_1_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Assignment_1_ServiceClient : System.ServiceModel.ClientBase<Assignment_1_Client.Assignment1ServiceReference.IAssignment_1_Service>, Assignment_1_Client.Assignment1ServiceReference.IAssignment_1_Service {
        
        public Assignment_1_ServiceClient() {
        }
        
        public Assignment_1_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Assignment_1_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Assignment_1_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Assignment_1_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckPrimeNumber(int input) {
            return base.Channel.CheckPrimeNumber(input);
        }
        
        public System.Threading.Tasks.Task<bool> CheckPrimeNumberAsync(int input) {
            return base.Channel.CheckPrimeNumberAsync(input);
        }
        
        public int SumDigits(int input) {
            return base.Channel.SumDigits(input);
        }
        
        public System.Threading.Tasks.Task<int> SumDigitsAsync(int input) {
            return base.Channel.SumDigitsAsync(input);
        }
        
        public string ReverseString(string input) {
            return base.Channel.ReverseString(input);
        }
        
        public System.Threading.Tasks.Task<string> ReverseStringAsync(string input) {
            return base.Channel.ReverseStringAsync(input);
        }
        
        public string PrintHtmlTags(string tag, string input) {
            return base.Channel.PrintHtmlTags(tag, input);
        }
        
        public System.Threading.Tasks.Task<string> PrintHtmlTagsAsync(string tag, string input) {
            return base.Channel.PrintHtmlTagsAsync(tag, input);
        }
        
        public string SortNumbers(string sortingType, int[] numbers) {
            return base.Channel.SortNumbers(sortingType, numbers);
        }
        
        public System.Threading.Tasks.Task<string> SortNumbersAsync(string sortingType, int[] numbers) {
            return base.Channel.SortNumbersAsync(sortingType, numbers);
        }
    }
}
